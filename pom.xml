<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.cg</groupId>
	<artifactId>ssh-template</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>

	<name>"Struts2 + Hibernate + Spring" Template Maven Webapp</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<servlet-api-version>2.5</servlet-api-version>
		<jsp-api-version>2.0</jsp-api-version>
		<!-- Optional: TODO 1 Pick the version of jetty you want. -->
		<jetty.version>8.1.8.v20121106</jetty.version>
	 		<spring.version>3.2.0.RELEASE</spring.version>
<!-- 		<spring.version>2.5.6.SEC03</spring.version> -->
<!-- 		<spring.version>3.1.3.RELEASE</spring.version> -->
		<maven.compiler.source>1.6</maven.compiler.source>
   		<maven.compiler.target>1.6</maven.compiler.target>
   		<struts.version>2.3.8</struts.version>
   		<hibernate.version>3.6.9.Final</hibernate.version>
   		<slf4j.version>1.7.2</slf4j.version>
   		<logback.version>1.0.9</logback.version>
   		<aspectj-version>1.6.11</aspectj-version>   		
	</properties>

	<!-- TODO 2 Configure repo2.maven.org as a repository. -->
	<!-- Optional <repositories> <repository> <id>repo2_maven_org</id> <url>http://repo2.maven.org/maven2</url> 
		</repository> </repositories> -->
	<!--
	<repositories>
		<repository>
			<id>central</id>
			<url>http://localhost:8081/nexus/content/groups/public/</url>
		</repository>
	</repositories>
	-->	
	<dependencies>
		<dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>servlet-api</artifactId>
		    <version>${servlet-api-version}</version>
		    <scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jsp-api</artifactId>
			<version>${jsp-api-version}</version>
			 <scope>provided</scope>
		</dependency>
		
		<!-- 日志组件 slf4j begin -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<!-- logback-access module: integrates with Servlet containers to provide HTTP-access log functionality -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-access</artifactId>
			<version>${logback.version}</version>
		</dependency>
        <!-- 日志组件 slf4j end -->
        <dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4.5</version>
		</dependency>
            
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-core</artifactId>
			<version>${struts.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-json-plugin</artifactId>
			<version>${struts.version}</version>
		</dependency>
        <dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		    
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${aspectj-version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${aspectj-version}</version>
		</dependency>
            
		<dependency>
			<groupId>com.caucho</groupId>
			<artifactId>hessian</artifactId>
			<version>4.0.7</version>
		</dependency>
		
		<dependency>
			<groupId>net.sourceforge.jtds</groupId>
			<artifactId>jtds</artifactId>
			<version>1.2.7</version>
		</dependency>
            
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>

		<!-- <dependency> <groupId>org.eclipse.jetty</groupId> <artifactId>jetty-server</artifactId> 
			<version>${jetty.version}</version> </dependency> -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<!--old version <artifactId>maven-jetty-plugin</artifactId> -->
				<!-- Optional -->
				<version>${jetty.version}</version>
				<configuration>
					<!-- 每n秒扫描项目的文件改动，包括java类文件;若为0，一改动保存则重启jetty -->
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<stopPort>9999</stopPort>
					<webApp>
						<contextPath>/web</contextPath>
					</webApp>
					 <connectors>
				       <connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
				       		<!-- 配置 jetty启动端口，或 mvn jetty:run -Djetty.port=1111 -->
				          <port>3333</port>
				          <maxIdleTime>60000</maxIdleTime>
				       </connector>
				     </connectors>
				</configuration>
			</plugin>

 		<plugin>
          <groupId>org.apache.tomcat.maven</groupId>
          <artifactId>tomcat7-maven-plugin</artifactId>
          <version>2.0</version>
          <configuration>
		      <!-- http port -->
		      <port>9090</port>
		      <!-- application path always starts with /-->
		      <path>/web</path>
		      <reloadable>true</reloadable>
<!-- 		      <disableURLRewriting>false</disableURLRewriting> -->
<!-- 				<cookies>false</cookies> -->
	      </configuration>
        </plugin>
        
        <!--  测试阶段暂时不需要 去编织,太耗时
	    <plugin>
	       <groupId>org.codehaus.mojo</groupId>
	       <artifactId>aspectj-maven-plugin</artifactId>
	       <version>1.4</version>
	       <executions>
	         <execution>
	           <goals>
	             <goal>compile</goal>
	             <goal>test-compile</goal>
	           </goals>
	         </execution>
	       </executions>
	       <configuration>
	         <source>${maven.compiler.source}</source>
	         <target>${maven.compiler.target}</target>
	       </configuration>
	     </plugin>
	     -->
	     
		</plugins>
	</build>

	<!-- <build> <outputDirectory>${project.basedir}/src/main/webapp/WEB-INF/classes</outputDirectory> 
		<finalName>test-maven-tomcat</finalName> </build> -->

</project>
